<?php

class calculator
{

    public function add($string,$delimeter1,$delimeter2)
    {
	if(isset($string)&&("{$string}"!="")){
		if((isset($delimeter1)&&("{$delimeter1}"!=""))&&(isset($delimeter2)&&("{$delimeter2}"!="")))
		{
			$string=preg_replace("/\\\\n/", "\n", $string);
			$delimeter1=preg_replace("/\\\\n/", "\n", $delimeter1);	
			$delimeter2=preg_replace("/\\\\n/", "\n", $delimeter2);
			if((!(preg_match("/^[0-9]+$/", $delimeter1)))&&(!(preg_match("/^[0-9]+$/", $delimeter1)))){
				if (strpos($string,"\\\\[{$delimeter1}][{$delimeter2}]\n") !== false) {
					$string=str_replace("\\\\[{$delimeter1}][{$delimeter2}]\n","",$string);
					$string=str_replace("{$delimeter2}","{$delimeter1}",$string);
					if (str_replace("{$delimeter1}\n","{$delimeter1}", $string)!="{$string}") {
						$syntax=" --> syntax error";
					}
					
					$string=explode($delimeter1,$string);
					$answer=0;
					$negatives="";
					$codeunits = array();
					for ($i = 0; $i<0xD800; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
					for ($i = 0xE000; $i<0xFFFF; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
					$letters = implode($codeunits);
					$numbers = array("0","1","2","3","4","5","6","7","8","9","-");
					$letters = str_replace($numbers,"",$numbers);
					foreach($string as $value){
						if(str_replace($letters, "", $value)<1000){
							if(str_replace($letters, "", $value)<0)
							{
								$negatives=$negatives.$value;
								$value=str_replace($letters, "", $value)*-1;
								
							};
						$answer=$answer+str_replace($letters, "", $value);
						}
						else{}
					}
					return $answer;
					if($negatives!=""){throw new \Exception("negatives not allowed: ".$negatives);}
					if(isset($syntax)){throw new \Exception('Invalid string');}
				}
				else{throw new \Exception('Invalid string');}
			}
			else{throw new \Exception("Invalid Delimeter Syntax, Delimeter cannot only contain numbers");}
		}
		elseif(isset($delimeter1)&&("{$delimeter1}"!=""))
		{
			$string=preg_replace("/\\\\n/", "\n", $string);
			$delimeter1=preg_replace("/\\\\n/", "\n", $delimeter1);	
			if((!(preg_match("/^[0-9]+$/", $delimeter1)))){
				if (strpos($string,"\\\\[{$delimeter1}]\n") !== false) {
					$string=str_replace("\\\\[{$delimeter1}]\n","",$string);
					if (str_replace("{$delimeter1}\n","{$delimeter1}", $string)!="{$string}") {
						$syntax=" --> syntax error";
					}
					
					$string=explode($delimeter1,$string);
					$negatives="";
				    	$answer=0;
					for ($i = 0; $i<0xD800; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
					for ($i = 0xE000; $i<0xFFFF; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
					$letters = implode($codeunits);
					$numbers = array("0","1","2","3","4","5","6","7","8","9","-");
					$letters = str_replace($numbers,"",$numbers);
					foreach($string as $value){
						if(str_replace($letters, "", $value)<1000){
							if(str_replace($letters, "", $value)<0)
							{
								$negatives=$negatives.$value.",";
								$value=str_replace($letters, "", $value)*-1;						
							};
						$answer=$answer+str_replace($letters, "", $value);
						}
						else
						{}
					}
					
					if($negatives!=""){throw new \Exception("negatives not allowed: ".$negatives);}
					if(isset($syntax)){throw new \Exception('Invalid string');}
					return $answer;
				}
				else{throw new \Exception('Invalid string');}
				
			}
		}
		elseif($string!="")
		{
			$string=preg_replace("/\\\\n/", "\n", $string);
			$delimeter1=",";	
			$string=str_replace("\\\\[{$delimeter1}]\n","",$string);
			if (str_replace("{$delimeter1}\n","{$delimeter1}", $string)!="{$string}") {
				$syntax=" --> syntax error";
			}
			
			$string=explode($delimeter1,$string);
			$negatives="";
			$answer=0;
			for ($i = 0; $i<0xD800; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
			for ($i = 0xE000; $i<0xFFFF; $i++)$codeunits[] = iconv('UCS-4LE', 'UTF-8', pack('V', $i));
			$letters = implode($codeunits);
			$numbers = array("0","1","2","3","4","5","6","7","8","9","-");
			$letters = str_replace($numbers,"",$numbers);
			foreach($string as $value){
				if(str_replace($letters, "", $value)<1000){
					if(str_replace($letters, "", $value)<0)
					{
						$negatives=$negatives.$value.",";
						$value=str_replace($letters, "", $value)*-1;						
					};
				$answer=$answer+str_replace($letters, "", $value);
				}
				else
				{}
			}
			return $answer;
			if($negatives!=""){throw new \Exception("negatives not allowed: ".$negatives);}
			if(isset($syntax)){throw new \Exception('Invalid string');}
			

		}
		else{return 0;}
	}
	else{return 0;}
    }
}
